@model SSCASPEL.Models.UpdateSerial

@{
    ViewData["Title"] = "UpdateSerials";
    Layout = "~/Views/Home/Shared/_IndexLayout.cshtml";
}

<h1>Actualice su sistema</h1>


<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="UpdateDataSerial" asp-controller="Home">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div hidden class="form-group">
                <label asp-for="Id" class="control-label"></label>
                <input asp-for="Id" class="form-control" />
                <span asp-validation-for="Id" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label class="control-label">Modalidad</label>
                <select name="Modo">

                    <option value="C">Completo</option>
                    <option value="R">Renta</option>
                </select>
                <!--
                <input asp-for="Modo" class="form-control" />
                <span asp-validation-for="Modo" class="text-danger"></span>
                -->
            </div>
            <div class="form-group">
                <label class="control-label">Fecha Registro o Expiracion</label>
                <input asp-for="Fechaexp" class="form-control" type="date" />
                <span asp-validation-for="Fechaexp" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Dispositivos" class="control-label"></label>
                <input asp-for="Dispositivos" class="form-control" />
                <span asp-validation-for="Dispositivos" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Serial" class="control-label"></label>
                <input asp-for="Serial" class="form-control" />
                <span asp-validation-for="Serial" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Guardar" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

@{
    string query = (ViewData["message"] ?? string.Empty) as string;
    System.Diagnostics.Debug.WriteLine(query);

    if (!string.IsNullOrEmpty(query))
    {

        if (ViewData["tipo"] as string == "succ")
        {
            <div class="alert alert-success alert-dismissible fade show" role="alert">
                <strong>OK!</strong>  @ViewData["message"]
                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
        }
        else if (ViewData["tipo"] as string == "error")
        {
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                <strong>Error!</strong> @ViewData["message"]
                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
        }
        else
        {
            <div class="alert alert-warning alert-dismissible" role="alert">
                <span type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></span>
                <strong>Warning!</strong> Still on beta stage.
            </div>
        }
    }

}
<script src="~/bootstrap/dist/js/bootstrap.js"></script>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
